# Naive Bayes Spam Classifier  

This project implements a simple **spam email classifier** using **Bayes' Theorem**.  
The dataset consists of short emails containing the keywords **WIN**, **FREE**, and **OFFER**, with labels indicating whether the email is spam or not spam.  

---

## Dataset  
The dataset (`email_spam_nospam.csv`) contains 18 emails with the following features:  
- **WIN** → whether the email contains the word "WIN" (1 = Yes, 0 = No)  
- **FREE** → whether the email contains the word "FREE"  
- **OFFER** → whether the email contains the word "OFFER"  
- **Spam** → target variable (1 = Spam, 0 = Not Spam)  

---

## Methodology  
1. **Preprocessing**: Converted Yes/No and Spam/Not Spam into binary values.  
2. **Prior Probabilities**: Calculated P(Spam) and P(Not Spam).  
3. **Conditional Probabilities**: Estimated P(WIN|Spam), P(FREE|Spam), P(OFFER|Spam), and their complements.  
4. **Bayes' Theorem**: Applied to compute the probability that an email is spam given its keywords.  
5. **Classification Rule**: If P(Spam | features) ≥ 0.5 → classify as Spam, otherwise Not Spam.  

---

## Results  

### Test Emails  
| Email                                | WIN | FREE | OFFER | Prediction | P(Spam) |
|--------------------------------------|-----|------|-------|------------|---------|
| WIN a FREE trip!                     |  1  |  1   |   0   | Spam       | 0.55    |
| Exclusive OFFER for you!             |  0  |  0   |   1   | Not Spam   | 0.33    |
| WIN big with this special OFFER!     |  1  |  0   |   1   | Not Spam   | 0.25    |
| Get your FREE OFFER now!             |  0  |  1   |   1   | Not Spam   | 0.45    |
| WIN a FREE prize with our OFFER!     |  1  |  1   |   1   | Spam       | 1.00    |

---

## Skills Demonstrated  
- Probability & Statistics  
- Conditional Probability & Bayes’ Theorem  
- Binary Feature Engineering  
- Naive Bayes Classification  
- Python (pandas, probability calculations)  
